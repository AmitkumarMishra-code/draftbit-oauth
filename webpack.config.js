"use strict";

// Expo CLI will await this method so you can optionally return a promise.
const createExpoWebpackConfigAsync = require("@expo/webpack-config");

module.exports = async function (env, argv) {
  // https://github.com/expo/expo-cli/tree/master/packages/webpack-config#environment
  const enviroment = { ...env,
    // TODO: Remove this feature flag
    pwa: process.env.FLAG_PWA === "true"
  };
  const config = await createExpoWebpackConfigAsync(enviroment, argv); // Expo's default is to enable these options, which results in somewhat
  // confusing behavior: You might know you updated your app, but have to
  // arbitrarily refresh a lot before you see the newer version.  In the
  // meantime, if the app is open in another tab, you can run into circumstances
  // where the new service worker is servicing requests for an old version of an
  // app, which is likely to lead to esoteric, hard to reproduce issues.
  // Instead, we put a notification in your app which listens for new service
  // workers, then replaces everything in a single shot with a forced refresh,
  // avoiding the issues above, along with being a bit more explit to users.

  config.plugins.forEach(({
    config
  }) => {
    if (config && "skipWaiting" in config) {
      config.skipWaiting = false;
      config.clientsClaim = false;
    }
  });
  return config;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlcy9maXh0dXJlLWV4cG8td2ViLWJ1aWxkLWJvaWxlcnBsYXRlL3dlYnBhY2suY29uZmlnLmpzIl0sIm5hbWVzIjpbImNyZWF0ZUV4cG9XZWJwYWNrQ29uZmlnQXN5bmMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImVudiIsImFyZ3YiLCJlbnZpcm9tZW50IiwicHdhIiwicHJvY2VzcyIsIkZMQUdfUFdBIiwiY29uZmlnIiwicGx1Z2lucyIsImZvckVhY2giLCJza2lwV2FpdGluZyIsImNsaWVudHNDbGFpbSJdLCJtYXBwaW5ncyI6Ijs7QUFBQztBQUNELE1BQU1BLDRCQUE0QixHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBNUM7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixnQkFBZ0JDLEdBQWhCLEVBQXFCQyxJQUFyQixFQUEyQjtBQUMxQztBQUNBLFFBQU1DLFVBQVUsR0FBRyxFQUNqQixHQUFHRixHQURjO0FBRWpCO0FBQ0FHLElBQUFBLEdBQUcsRUFBRUMsT0FBTyxDQUFDSixHQUFSLENBQVlLLFFBQVosS0FBeUI7QUFIYixHQUFuQjtBQU1BLFFBQU1DLE1BQU0sR0FBRyxNQUFNViw0QkFBNEIsQ0FBQ00sVUFBRCxFQUFhRCxJQUFiLENBQWpELENBUjBDLENBVTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQUssRUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVDLE9BQWYsQ0FBdUIsQ0FBQztBQUFFRixJQUFBQTtBQUFGLEdBQUQsS0FBZ0I7QUFDckMsUUFBSUEsTUFBTSxJQUFJLGlCQUFpQkEsTUFBL0IsRUFBdUM7QUFDckNBLE1BQUFBLE1BQU0sQ0FBQ0csV0FBUCxHQUFxQixLQUFyQjtBQUNBSCxNQUFBQSxNQUFNLENBQUNJLFlBQVAsR0FBc0IsS0FBdEI7QUFDRDtBQUNGLEdBTEQ7QUFPQSxTQUFPSixNQUFQO0FBQ0QsQ0EzQkQiLCJzb3VyY2VzQ29udGVudCI6WyIgLy8gRXhwbyBDTEkgd2lsbCBhd2FpdCB0aGlzIG1ldGhvZCBzbyB5b3UgY2FuIG9wdGlvbmFsbHkgcmV0dXJuIGEgcHJvbWlzZS5cbmNvbnN0IGNyZWF0ZUV4cG9XZWJwYWNrQ29uZmlnQXN5bmMgPSByZXF1aXJlKFwiQGV4cG8vd2VicGFjay1jb25maWdcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gKGVudiwgYXJndikge1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vZXhwby9leHBvLWNsaS90cmVlL21hc3Rlci9wYWNrYWdlcy93ZWJwYWNrLWNvbmZpZyNlbnZpcm9ubWVudFxuICBjb25zdCBlbnZpcm9tZW50ID0ge1xuICAgIC4uLmVudixcbiAgICAvLyBUT0RPOiBSZW1vdmUgdGhpcyBmZWF0dXJlIGZsYWdcbiAgICBwd2E6IHByb2Nlc3MuZW52LkZMQUdfUFdBID09PSBcInRydWVcIixcbiAgfTtcblxuICBjb25zdCBjb25maWcgPSBhd2FpdCBjcmVhdGVFeHBvV2VicGFja0NvbmZpZ0FzeW5jKGVudmlyb21lbnQsIGFyZ3YpO1xuXG4gIC8vIEV4cG8ncyBkZWZhdWx0IGlzIHRvIGVuYWJsZSB0aGVzZSBvcHRpb25zLCB3aGljaCByZXN1bHRzIGluIHNvbWV3aGF0XG4gIC8vIGNvbmZ1c2luZyBiZWhhdmlvcjogWW91IG1pZ2h0IGtub3cgeW91IHVwZGF0ZWQgeW91ciBhcHAsIGJ1dCBoYXZlIHRvXG4gIC8vIGFyYml0cmFyaWx5IHJlZnJlc2ggYSBsb3QgYmVmb3JlIHlvdSBzZWUgdGhlIG5ld2VyIHZlcnNpb24uICBJbiB0aGVcbiAgLy8gbWVhbnRpbWUsIGlmIHRoZSBhcHAgaXMgb3BlbiBpbiBhbm90aGVyIHRhYiwgeW91IGNhbiBydW4gaW50byBjaXJjdW1zdGFuY2VzXG4gIC8vIHdoZXJlIHRoZSBuZXcgc2VydmljZSB3b3JrZXIgaXMgc2VydmljaW5nIHJlcXVlc3RzIGZvciBhbiBvbGQgdmVyc2lvbiBvZiBhblxuICAvLyBhcHAsIHdoaWNoIGlzIGxpa2VseSB0byBsZWFkIHRvIGVzb3RlcmljLCBoYXJkIHRvIHJlcHJvZHVjZSBpc3N1ZXMuXG4gIC8vIEluc3RlYWQsIHdlIHB1dCBhIG5vdGlmaWNhdGlvbiBpbiB5b3VyIGFwcCB3aGljaCBsaXN0ZW5zIGZvciBuZXcgc2VydmljZVxuICAvLyB3b3JrZXJzLCB0aGVuIHJlcGxhY2VzIGV2ZXJ5dGhpbmcgaW4gYSBzaW5nbGUgc2hvdCB3aXRoIGEgZm9yY2VkIHJlZnJlc2gsXG4gIC8vIGF2b2lkaW5nIHRoZSBpc3N1ZXMgYWJvdmUsIGFsb25nIHdpdGggYmVpbmcgYSBiaXQgbW9yZSBleHBsaXQgdG8gdXNlcnMuXG4gIGNvbmZpZy5wbHVnaW5zLmZvckVhY2goKHsgY29uZmlnIH0pID0+IHtcbiAgICBpZiAoY29uZmlnICYmIFwic2tpcFdhaXRpbmdcIiBpbiBjb25maWcpIHtcbiAgICAgIGNvbmZpZy5za2lwV2FpdGluZyA9IGZhbHNlO1xuICAgICAgY29uZmlnLmNsaWVudHNDbGFpbSA9IGZhbHNlO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=